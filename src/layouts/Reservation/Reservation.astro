---
const { title, restaurant, name, subtitle, src } = Astro.props;

//Poppins
import "@fontsource/poppins/100.css";
import "@fontsource/poppins/200.css";
import "@fontsource/poppins/300.css";
import "@fontsource/poppins/400.css";
import "@fontsource/poppins/500.css";
import "@fontsource/poppins/600.css";
import "@fontsource/poppins/700.css";
import "@fontsource/poppins/800.css";
import "@fontsource/poppins/900.css";

//Staaliches
import "@fontsource/staatliches";

//Bebas Neue
import "@fontsource/bebas-neue";

//Abel
import "@fontsource/abel";

//Antonio
import "@fontsource-variable/antonio";
import ViewTransitions from "astro/components/ViewTransitions.astro";
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<script
			src="https://kit.fontawesome.com/a1618bce8f.js"
			crossorigin="anonymous"></script>
		<link
			rel="stylesheet"
			href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
			integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
			crossorigin=""
		/>
	</head>
	<body data-restaurant={restaurant}>
		<div class="centered">
			<div class="error-popup">
				<img
					src="https://cdn-icons-png.flaticon.com/512/5219/5219070.png"
					alt="Error"
					class="error-popup__icon"
				/>
				<div class="error-popup__content">
					<h1 class="error-popup__content__title">Error</h1>
					<p class="error-popup__content__error"></p>
				</div>
			</div>
		</div>
		<div class="centered-2">
			<div class="success-popup">
				<i class="fa-solid fa-xmark success-popup__close"></i>
				<img
					src="https://cdn-icons-png.flaticon.com/512/2460/2460875.png"
					alt="Success"
					class="success-popup__icon"
				/>
				<div class="success-popup__content">
					<h1 class="success-popup__content__title">TODO LISTO!</h1>
					<p class="success-popup__content__error">
						Tu reserva se ha realizado<br /> correctamente ;)
					</p>
				</div>
			</div>
		</div>
		<main class="content">
			<header class="content__header">
				<h1 class="content__header__title">RESERVA MESA</h1>
				<h2 class="content__header__subtitle">
					THE CUBE <span class="content__header__subtitle--color"
						>{subtitle}</span
					>
				</h2>
			</header>
			<main class="content__main">
				<form class="content__main__form" onsubmit="return false">
					<div class="content__main__form__inpt-container">
						<label
							for="name"
							class="content__main__form__inpt-container__title"
							>Nombre</label
						>
						<input
							type="text"
							class="content__main__form__inpt-container__inpt content__main__form__inpt-container__inpt--name"
							name="name"
							required
						/>
					</div>
					<div class="content__main__form__inpt-container">
						<label
							for="people"
							class="content__main__form__inpt-container__title"
							>Número de personas</label
						>
						<input
							type="number"
							class="content__main__form__inpt-container__inpt content__main__form__inpt-container__inpt--people"
							name="people"
							min="1"
							required
						/>
					</div>
					<div class="content__main__form__inpt-container">
						<label
							for="date"
							class="content__main__form__inpt-container__title"
							>Fecha</label
						>
						<input
							type="date"
							class="content__main__form__inpt-container__inpt content__main__form__inpt-container__inpt--date"
							name="date"
							required
						/>
					</div>
					<div class="content__main__form__inpt-container">
						<label
							for="hour"
							class="content__main__form__inpt-container__title"
							>Hora</label
						>
						<select
							name="hour"
							id="hour"
							class="content__main__form__inpt-container__inpt content__main__form__inpt-container__inpt--hour"
							required
						>
							<option value="" disabled selected
								>Seleccione una hora</option
							>
						</select>
					</div>
					<div class="content__main__form__inpt-container">
						<label
							for="allergy"
							class="content__main__form__inpt-container__title"
							>Alergias</label
						>
						<input
							type="text"
							class="content__main__form__inpt-container__inpt content__main__form__inpt-container__inpt--allergy"
							name="allergy"
							placeholder="(ALERGIAS)"
						/>
					</div>
					<button type="submit" class="content__main__form__btn"
						>¡QUE APROVECHE!</button
					>
				</form>
			</main>
		</main>
		<div class="video-container">
			<div class="video-container__bar"></div>
			<video class="video-container__video" autoplay muted loop>
				<source src={src} type="video/mp4" />
			</video>
		</div>
	</body>
</html>

<style lang="scss">
	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}

	html {
		overflow: hidden;
	}

	body {
		display: flex;
		width: 100vw;
		height: 100vh;
		align-items: center;
	}

	.centered {
		width: 100vw;
		position: absolute;
		display: flex;
		justify-content: center;
		z-index: 10;
		top: 0px;
	}

	.centered-2 {
		display: none;
		width: 100vw;
		height: 100vh;
		position: absolute;
		z-index: 10;
		justify-content: center;
		align-items: center;
	}

	.error-popup {
		position: absolute;
		background-color: #fff;
		width: 45%;
		height: 70px;
		display: flex;
		border-left: 4px solid #f44336;
		border-radius: 6px;
		align-items: center;
		top: -90px;

		@keyframes appear {
			0% {
				top: -90px;
			}

			100% {
				top: 10px;
			}
		}

		@keyframes disappear {
			0% {
				top: 10px;
			}

			100% {
				top: -90px;
			}
		}

		&__icon {
			height: 40px;
			position: absolute;
			left: 10px;
		}

		&__content {
			position: relative;
			left: 70px;
			font-family: "Poppins", sans-serif;

			&__title {
				font-weight: 400;
				color: rgba(0, 0, 0, 0.644);
				line-height: 30px;
			}

			&__error {
				color: #aaa;
			}
		}
	}

	.success-popup {
		position: absolute;
		background-color: #fff;
		width: 85%;
		height: 85vh;
		display: flex;
		align-items: center;
		flex-direction: column;
		justify-content: center;

		&__close{
			font-size: 30px;
			position: absolute;
			right: 30px;
			top: 20px;
			align-self: flex-start;
		}

		&__icon {
			width: 186px;
			height: 186px;
			object-fit: cover;
			left: 10px;
		}

		&__content {
			font-family: "Poppins", sans-serif;
			text-align: center;

			&__title {
				font-weight: 400;
				color: rgba(0, 0, 0, 0.644);
				font-family: "Staatliches", sans-serif;
				font-size: 114px;
				font-weight: 400;
			}

			&__error {
				font-weight: 300;
				font-family: "Poppins", sans-serif;
				font-size: 20px;
				color: #aaa;
			}
		}
	}

	.content {
		position: relative;
		bottom: 35px;
		/* Este es el inner shadow */
		margin-left: 5vw;
		&__header {
			&__title {
				font-family: "Bebas Neue", sans-serif;
				font-size: 102px;
				line-height: 102px;
				font-weight: 400;
			}

			&__subtitle {
				font-family: "Staatliches", sans-serif;
				font-size: 60px;
				line-height: 60px;
				font-weight: 400;
				margin-left: 10px;
			}
		}

		&__main {
			margin-left: 10px;
			&__form {
				display: flex;
				flex-direction: column;
				display: flex;
				flex-direction: column;
				justify-content: space-evenly;
				width: 500px;
				gap: 0px;
				height: 65vh;

				&__inpt-container {
					display: flex;
					flex-direction: column;
					width: 100%;
					transition: all 0.5s;

					&:hover {
						scale: 1.03;
					}

					&:hover &__inpt {
						background-color: #fce8cb;
						color: rgb(63, 36, 5);
					}

					&__title {
						font-family: "Poppins", sans-serif;
						font-weight: 600;
					}

					&__inpt {
						padding: 20px;
						border: none;
						outline: none;
						height: 20px;
						font-family: "Staatliches";
						transition: all 0.5s;

						&::placeholder {
							opacity: 0.6 !important;
						}

						&--people {
							width: 30%;
						}

						&--date {
							width: 50%;
						}

						&--hour {
							display: flex;
							height: 50px;
							padding: 0.1px;
							width: 100%;
						}
					}
				}

				&__btn {
					padding: 7px;
					border: none;
					outline: none;
					font-family: "Staatliches", sans-serif;
					font-size: 61px;
					text-align: center;
					margin-top: 20px;
					transition: all 0.5s;
				}
			}
		}
	}

	.video-container {
		width: 500px;
		display: flex;
		height: 100vh;
		align-items: center;
		position: absolute;
		right: 0px;

		&__bar {
			width: 20px;
			height: 100vh;
			background-color: #fff;
			position: absolute;
		}

		&__video {
			width: 100%;
			height: 100vh;
			object-fit: cover;
		}
	}

	[data-restaurant="1"] {
		background-color: #ff7700;

		.content {
			&__header {
				color: #fff;

				&__subtitle {
					&--color {
						color: #592d00;
					}
				}
			}

			&__main {
				&__form {
					&__inpt-container {
						&__title {
							color: #592d00;
						}

						&__inpt {
							border: 3px solid #603b2a;
							border-radius: 10px;
							font-size: 26px;

							&::placeholder {
								color: #000;
								font-family: "Staatliches", sans-serif;
								font-weight: 400;
							}
						}
					}

					&__btn {
						background-color: #815843;
						color: #fff;
						border: 8px solid #603b2a;
						border-radius: 25px;

						&:hover {
							color: #815843;
							background-color: #fff;
							cursor: pointer;
							scale: 1.1;
							-webkit-box-shadow: 0px 40px 30px -32px rgba(0, 0, 0, 0.71);
							-moz-box-shadow: 0px 40px 30px -32px rgba(0, 0, 0, 0.71);
							box-shadow: 0px 40px 30px -32px rgba(0, 0, 0, 0.71);
						}
					}
				}
			}
		}

		.success-popup{
			background-color: #FEEDDE;
			border: 15px solid #603b2a;
			border-radius: 33px;

			&__close{
				color: #603b2a;
			}

			&__content{

				&__title{
					color: #3F1A09;
				}

				&__error{
					color: #603B2A;
				}
			}
		}
	}

	[data-restaurant="2"] {
		background-color: #f8dec8;

		.content {
			&__header {
				color: #af0000;

				&__subtitle {
					color: #000;
					&--color {
						color: #af0000;
					}
				}
			}

			&__main {
				&__form {
					&__inpt-container {
						&__title {
							color: #af0000;
						}

						&__inpt {
							border: 3px solid #af0000;
							font-size: 26px;

							&::placeholder {
								color: #000;
								font-family: "Staatliches", sans-serif;
								font-weight: 400;
							}
						}
					}

					&__btn {
						background-color: #af0000;
						color: #fff;
						border: 8px solid #000000;
						border-radius: 0px;

						&:hover {
							color: #af0000;
							background-color: #fff;
							cursor: pointer;
							scale: 1.1;
							-webkit-box-shadow: 0px 40px 30px -32px rgba(0, 0, 0, 0.71);
							-moz-box-shadow: 0px 40px 30px -32px rgba(0, 0, 0, 0.71);
							box-shadow: 0px 40px 30px -32px rgba(0, 0, 0, 0.71);
						}
					}
				}
			}
		}

		.success-popup{
			background-color: #FEEDDE;
			border: 15px solid #AF0000;

			&__close{
				color: #AF0000 ;
			}

			&__content{

				&__title{
					color: #8C1313;
				}

				&__error{
					color: #AF0000;
				}
			}
		}
	}

	[data-restaurant="3"] {
		background-color: #191a1c;

		.content {
			&__header {
				color: #ff9500;

				&__subtitle {
					color: #fff;
					&--color {
						color: #ff9500;
					}
				}
			}

			&__main {
				&__form {
					&__inpt-container {
						&__title {
							color: #ff9500;
						}

						&__inpt {
							border: 3px solid #ff9500;
							border-radius: 10px;
							font-size: 26px;

							&::placeholder {
								color: #000;
								font-family: "Staatliches", sans-serif;
								font-weight: 400;
							}
						}
					}

					&__btn {
						background-color: #ffa600;
						color: #000;
						border: 8px solid #603b2a;
						border-radius: 25px;

						&:hover {
							color: #ffa600;
							background-color: #000000;
							border: 8px solid #ffa600;
							cursor: pointer;
							scale: 1.1;
							-webkit-box-shadow: 0px 40px 30px -32px rgba(0, 0, 0, 0.71);
							-moz-box-shadow: 0px 40px 30px -32px rgba(0, 0, 0, 0.71);
							box-shadow: 0px 40px 30px -32px rgba(0, 0, 0, 0.71);
						}
					}
				}
			}
		}

		.success-popup{
			background-color: #fff;
			border: 15px solid #DF7802;
			border-radius: 33px;

			&__close{
				color: #DF7802;
			}

			&__content{

				&__title{
					color: #DF7802;
				}

				&__error{
					color: #DF7802;
				}
			}
		}
	}

	.video-container {
		&__video {
		}
	}

	@media only screen and (max-width: 480px) {
		body {
			flex-direction: column;
			overflow-y: scroll;
		}

		.content {
			margin-left: 10px;

			&__main {
				&__form {
					width: 90vw;

					&__btn {
						font-size: 40px;
						margin-bottom: 20px;
					}
				}
			}
		}

		.video-container {
			display: none;
		}
	}

	@media only screen and (max-width: 900px) {
		body {
			flex-direction: column;
			overflow-y: scroll;
		}

		.content {
			bottom: 0px;
			margin-left: 10px;

			&__main {
				&__form {
					width: 90vw;

					&__btn {
						font-size: 40px;
						margin-bottom: 20px;
					}
				}
			}
		}

		.video-container {
			width: 100vw;
			height: 40vh;
			bottom: 0px;
			position: relative;

			&__video {
				height: 40vh;
			}
		}

		[data-restaurant="1"] {
			.video-container {
				&__video {
					border-radius: 0px;
					border-left: 0px;
				}
			}
		}
	}

	@media only screen and (min-width: 1600px) {
		.video-container {
			width: 1200px;
			display: flex;
			height: 100vh;
			align-items: center;
			position: absolute;
			right: 0px;
			border: 0px;
			border-radius: 0px;

			&__video {
				width: 100%;
				height: 100vh;
				object-fit: cover;
			}
		}
	}
</style>

<script is:inline>
	// Selecciona el elemento <select>
	const hourSelect = document.getElementById("hour");

	// Función para generar opciones de tiempo
	const generateTimeOptions = () => {
		let options = "";
		let startHour = 10;
		let endHour = 23.5; // 23:30 como 23.5 en pasos de media hora

		for (let time = startHour; time <= endHour; time += 0.5) {
			const hour = Math.floor(time); // Parte entera (horas)
			const minutes = time % 1 === 0 ? "00" : "30"; // Media hora
			const formattedTime = `${hour.toString().padStart(2, "0")}:${minutes}`;
			options += `<option value="${formattedTime}">${formattedTime}</option>`;
		}

		return options;
	};

	// Añadir las opciones al select
	hourSelect.innerHTML = generateTimeOptions();
</script>

<script is:inline>
	const errorPopup = document.querySelector(".error-popup");
	const error = document.querySelector(".error-popup__content__error");
	const successPopup = document.querySelector(".centered-2")
	const closeBtn = document.querySelector(".success-popup__close");
	const form = document.querySelector(".content__main__form");
	const nameInput = document.querySelector(
		".content__main__form__inpt-container__inpt--name",
	);
	const peopleInput = document.querySelector(
		".content__main__form__inpt-container__inpt--people",
	);
	const dateInput = document.querySelector(
		".content__main__form__inpt-container__inpt--date",
	);
	const timeInput = document.querySelector(
		".content__main__form__inpt-container__inpt--hour",
	);
	const allergyInput = document.querySelector(
		".content__main__form__inpt-container__inpt--allergy",
	);
	const restaurant = document.querySelector(
		".content__header__subtitle--color",
	).innerHTML;
	console.log(restaurant);

	const today = new Date();
	const oneYearLater = new Date();
	oneYearLater.setFullYear(today.getFullYear() + 1);

	// Formatear las fechas mínimas y máximas en formato "yyyy-MM-dd"
	const formatDate = (date) => {
		const year = date.getFullYear();
		const month = String(date.getMonth() + 1).padStart(2, "0");
		const day = String(date.getDate()).padStart(2, "0");
		return `${year}-${month}-${day}`;
	};

	// Establecer límites para la fecha
	dateInput.min = formatDate(today);
	dateInput.max = formatDate(oneYearLater);

	dateInput.addEventListener("change", () => {
		const selectedDate = new Date(dateInput.value);
		const isToday = selectedDate.toDateString() === today.toDateString();
	});

	closeBtn.addEventListener('click', () =>{
		successPopup.style.display = 'none';
	})

	form.addEventListener("submit", async (event) => {
		event.preventDefault();

		const nameValue = nameInput.value.trim();
		const peopleValue = peopleInput.value.trim();
		const dateValue = dateInput.value.trim();
		const timeValue = timeInput.value.trim();
		const allergyValue = allergyInput.value.trim();

		const nameRegex = /^[a-zA-ZÀ-ÿ\u00f1\u00d1\s]+$/; // Permite letras y espacios.

		let isValid = true;

		if (nameValue === "" || !nameRegex.test(nameValue)) {
			error.innerHTML =
				"El nombre no puede estar vacío y debe contener solo letras.";
			errorPopup.style.animation = "appear .4s forwards";
			setTimeout(() => {
				errorPopup.style.animation = "disappear 1.5s forwards";
			}, 2000);
			isValid = false;
		}

		if (peopleValue === "" || isNaN(peopleValue) || peopleValue <= 0) {
			error.innerHTML =
				"El número de personas debe ser un número válido mayor a 0.";
			errorPopup.style.animation = "appear .4s forwards";
			setTimeout(() => {
				errorPopup.style.animation = "disappear 1.5s forwards";
			}, 2000);
			isValid = false;
		}

		if (dateValue === "") {
			error.innerHTML = "Debe seleccionar una fecha.";
			errorPopup.style.animation = "appear .4s forwards";
			setTimeout(() => {
				errorPopup.style.animation = "disappear 1.5s forwards";
			}, 2000);
			isValid = false;
		}

		if (timeValue === "") {
			error.innerHTML = "Debe seleccionar una hora.";
			errorPopup.style.animation = "appear .4s forwards";
			setTimeout(() => {
				errorPopup.style.animation = "disappear 1.5s forwards";
			}, 2000);
			isValid = false;
		}

		if (isValid) {
			successPopup.style.display = 'flex';
			try {
				const res = await fetch("/api/reservation.json", {
					method: "POST",
					headers: {
						"Content-Type": "application/json",
					},
					body: JSON.stringify({
						name: nameValue,
						people: peopleValue, // Corregir el error tipográfico aquí
						date: dateValue,
						hour: timeValue,
						restaurant: restaurant,
						allergy: allergyValue,
					}),
				});
				const data = await res.json();
				console.log(data);
				setTimeout(() => {
					nameInput.value = "";
					peopleInput.value = "";
					dateInput.value = "";
					timeInput.value = "";
					allergyInput.value = "";
				}, 1000);
			} catch (err) {
				console.error(err);
			}
			// Aquí puedes continuar con el envío del formulario o realizar otra acción.
		}
	});
</script>
